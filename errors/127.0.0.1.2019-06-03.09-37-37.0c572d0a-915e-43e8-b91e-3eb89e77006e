(dp1
S'output'
p2
S'<type \'exceptions.IOError\'> Cannot open resource "d:/web2py/applications/antecedentesplataforma/static/escudo.png"\nfileName=\'d:/web2py/applications/antecedentesplataforma/static/escudo.png\' identity=[ImageReader@0x39516b0 filename=\'d:/web2py/applications/antecedentesplataforma/static/escudo.png\']'
p3
sS'layer'
p4
S'D:\\web2py\\applications\\antecedentesplataforma\\controllers/imprimir.py'
p5
sS'code'
p6
S'\nfrom reportlab.pdfgen import canvas\n\ndef sin_antecedentes():\n\t\t#importo para poner la fecha\n\tfrom datetime import *\n    \n    \thoyfecha=datetime.today() #capturo la fecha de hoy\n    \tdia=hoyfecha.day #capturo el dia\n    \tdia=str(dia)#paso el dia a string\n    \tmes=hoyfecha.month #capturo el mes\n    \tmes=str(mes)#paso el dia a string\n    \t#creo un diccionario para reemplazar el numero del mes por el nombre del mes\n    \tmeses={"1":"ENERO","2":"FEBRERO","3":"MARZO","4":"ABRIL","5":"MAYO","6":"JUNIO","7":"JULIO","8":"AGOSTO","9":"SEPTIEMBRE","10":"OCTUBRE","11":"NOVIEMBRE","12":"DICIEMBRE"}\n    \t\n    \tqmes=meses[mes]# reemplazo el numero del mes en el diccionario mes\n    \tanio=hoyfecha.year #capturo el a\xc3\xb1o\n    \tanio=str(anio)\t#paso el a\xc3\xb1o a string para pornerlo en el pdf\n\tide_padron=request.args[1]\t#traigo el argumento del id del padron\n\tide_soli=request.args[0] \t#traigo el argumento del id de la solicitud\n\tdni=request.args[2] \t\t#traigo el dni de la persona\n\tDNI=str(dni)\t\t\t\t#paso el dni a string para ponerlo en el pdf\n\tpa=db(db.padron.id==ide_padron).select().first() #realizo un set para sacar los datos de la tabla padron\n\tape=pa.Apellido \t#capturo el apellido\n\tape=ape+","\t\t\t#le agrego una coma al apellido\n\tnom=pa.Nombre \t\t#capturo el nombre\n\tclase=pa.Clase \t\t#capturo la clase\n\tclase=str(clase) \t#paso la clase a string para ponerlo en el pdf\n\tdni=pa.DocumentoNro\t#capturo el dni\n\tdni=str(dni)\t\t#paso el dni a string para ponerlo en el pdf\n\tpasa=pa.Pasaporte\t#capturo el pasaporte\n\tpasa=str(pasa)\t\t#paso el pasaporte a string\n\tnacion=pa.IdPais\t#saco el id del pais \t\n\tpaises=db(db.paises.id==nacion).select().first()# hago un set para sacar el pais\n\tpais=paises.pais \t#saco el nombre del pais\n\tvil={"S":"SOLTERO/A","C":"CASADO/A","D":"DIVORSIADO/A","V":"VIUDO/A"} #creo un diccionario \t\n\tcivil=pa.EstadoCivil\t# capturo el estado civil\n\te_civil=vil[civil]#reemplazo en el diccionario vil\t\n\tprof=pa.Profesion  #saco la profesion\n\tdirec=pa.Direccion #saco la direccion\n\tclave={\'1\':"A.G.",\'2\':"C.I.",\'3\':"D.C.P.",\'4\':"D.E.",\'5\':"R.C.",\'6\':"S.P.",\'0\':None} #creo un diccionario para los tipos de prontuario\n\ttipo=pa.IdProntuarioTipo #saco el id del tipo de prontuario\n\ttipo=str(tipo)\t#\n\tnpront=pa.ProntuarioNro\n\tnpront=str(npront)\n\tqtipo=clave[tipo]\t\n\tsol=db(db.solicitud.id==ide_soli).select().first()\n\tsolipor=sol.solicitado_por\n\tnum=sol.nro_certificado\n\tcapital=sol.capitalinterior\n\tintervino=sol.intervino\n\tfecha=sol.fecha_solicitada\t\n\tuser=sol.usuario\n\ttiene=sol.t_antecedentes\n\tante=sol.antecedentes\n\t#Importamos los modulos necesarios\n\tfrom reportlab.pdfgen import canvas# clase para crear el documento\n\tfrom reportlab.lib.colors import white,red,green,blue,gray,black#colores\t\n\tfrom os import startfile\n\t\n\tpdf="ej.pdf"#largo,alto#defino como se va a llamar el arhivo pfg\n\tcertificado=(602,620) #configuro los tama\xc3\xb1os de la hoja del certificado\n\n\tdoc = canvas.Canvas(pdf,pagesize=certificado)\n\tmargen=db(db.margenes).select().first()\n\tx = margen.x\n\tlargo=602\n\ty =margen.y\n\talto=620\n\tdoc.setFont("Courier", 10)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(110+x,455+y,ape)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(155+x,455+y,nom)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(270+x,438+y,clase)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(373+x,438+y,dni)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(173+x,420+y,pais)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(380+x,420+y,e_civil)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(157+x,406+y,prof)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(160+x,390+y,direc)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(175+x,360+y,qtipo+npront)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(90+x,255+y,solipor)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(360+x,240+y,dia)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(160+x,225+y,qmes)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(360+x,225+y,anio)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(160+x,205+y,num)#para poner texto valores x,y\n\n\tdoc.setFont("Courier",10)\t#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(95+x,120+y,intervino)#para poner texto valores x,y\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\tdoc.showPage()\n\tdoc.save()\n\tstartfile(pdf)                    \n\treturn dict()\n\n    \t\n\t\n\n\t\n\t\ndef con_antecedentes():\n\t\t#importo para poner la fecha\n\tfrom datetime import *\n    \n    \thoyfecha=datetime.today() #capturo la fecha de hoy\n    \tdia=hoyfecha.day #capturo el dia\n    \tdia=str(dia)#paso el dia a string\n    \tmes=hoyfecha.month #capturo el mes\n    \tmes=str(mes)#paso el dia a string\n    \t#creo un diccionario para reemplazar el numero del mes por el nombre del mes\n    \tmeses={"1":"ENERO","2":"FEBRERO","3":"MARZO","4":"ABRIL","5":"MAYO","6":"JUNIO","7":"JULIO","8":"AGOSTO","9":"SEPTIEMBRE","10":"OCTUBRE","11":"NOVIEMBRE","12":"DICIEMBRE"}\n    \t\n    \tqmes=meses[mes]# reemplazo el numero del mes en el diccionario mes\n    \tanio=hoyfecha.year #capturo el a\xc3\xb1o\n    \tanio=str(anio)\t#paso el a\xc3\xb1o a string para pornerlo en el pdf\n\tide_padron=request.args[1]\t#traigo el argumento del id del padron\n\tide_soli=request.args[0] \t#traigo el argumento del id de la solicitud\n\tdni=request.args[2] \t\t#traigo el dni de la persona\n\tDNI=str(dni)\t\t\t\t#paso el dni a string para ponerlo en el pdf\n\tpa=db(db.padron.id==ide_padron).select().first() #realizo un set para sacar los datos de la tabla padron\n\tape=pa.Apellido \t#capturo el apellido\n\tape=ape+","\t\t\t#le agrego una coma al apellido\n\tnom=pa.Nombre \t\t#capturo el nombre\n\tclase=pa.Clase \t\t#capturo la clase\n\tclase=str(clase) \t#paso la clase a string para ponerlo en el pdf\n\tdni=pa.DocumentoNro\t#capturo el dni\n\tdni=str(dni)\t\t#paso el dni a string para ponerlo en el pdf\n\tpasa=pa.Pasaporte\t#capturo el pasaporte\n\tpasa=str(pasa)\t\t#paso el pasaporte a string\n\tnacion=pa.IdPais\t#saco el id del pais \t\n\tpaises=db(db.paises.id==nacion).select().first()# hago un set para sacar el pais\n\tpais=paises.pais \t#saco el nombre del pais\n\tvil={"S":"SOLTERO/A","C":"CASADO/A","D":"DIVORSIADO/A","V":"VIUDO/A"} #creo un diccionario \t\n\tcivil=pa.EstadoCivil\t# capturo el estado civil\n\te_civil=vil[civil]#reemplazo en el diccionario vil\t\n\tprof=pa.Profesion  #saco la profesion\n\tdirec=pa.Direccion #saco la direccion\n\tclave={\'1\':"A.G.",\'2\':"C.I.",\'3\':"D.C.P.",\'4\':"D.E.",\'5\':"R.C.",\'6\':"S.P.",\'0\':None} #creo un diccionario para los tipos de prontuario\n\ttipo=pa.IdProntuarioTipo #saco el id del tipo de prontuario\n\ttipo=str(tipo)\t#\n\tnpront=pa.ProntuarioNro\n\tnpront=str(npront)\n\tqtipo=clave[tipo]\t\n\tsol=db(db.solicitud.id==ide_soli).select().first()\n\tsolipor=sol.solicitado_por\n\tnum=sol.nro_certificado\n\tcapital=sol.capitalinterior\n\tintervino=sol.intervino\n\tfecha=sol.fecha_solicitada\t\n\tuser=sol.usuario\n\ttiene=sol.t_antecedentes\n\tante=sol.antecedentes\n\t#Importamos los modulos necesarios\n\tfrom reportlab.pdfgen import canvas# clase para crear el documento\n\tfrom reportlab.lib.colors import white,red,green,blue,gray,black#colores\t\n\tfrom os import startfile\n\tfrom reportlab.lib.utils import ImageReader\n\timport StringIO\n\timport PIL.Image\n\tfrom reportlab.lib.styles import getSampleStyleSheet\n\tfrom reportlab.lib.enums import TA_LEFT, TA_RIGHT, TA_CENTER, TA_JUSTIFY\n\tfrom reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Image\n\t\n\n\t\n\tpdf="con_antecedentes.pdf"#largo,alto#defino como se va a llamar el arhivo pfg\n\toficio=(612,1010) #configuro los tama\xc3\xb1os de la hoja oficio \n\t#A4=612.0, 792.0 \n\tdoc = canvas.Canvas(pdf,pagesize=oficio)\n\tmargen=db(db.margenes).select().first()\n\tx = margen.x\n\tlargo=612.0\t\n\ty =margen.y\n\talto=1010  \n\testilos = getSampleStyleSheet()\n\t\n\tencabezado=[]\n\theader1=doc.drawImage("d:\\\\web2py\\\\applications\\\\antecedentesplataforma\\\\static\\\\images\\\\escudo1.jpg",80,950,50,50)#insertar imagen\n\tdoc.setFont("Helvetica-Bold", 18)#fuente de letra y tama\xc3\xb1o\n\tencabezado.append(header1)\n\theader2=doc.drawString(150+x,970+y,"CERTIFICADO DE ANTECEDENTES")#para poner texto valores x,y\n\tencabezado.append(header2)\n\theader3=doc.drawImage("d:\\\\web2py\\\\applications\\\\antecedentesplataforma\\\\static\\\\images\\\\escudo_policia.jpg",480,950,50,50)#insertar imagen\n\tencabezado.append(header3)\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(80+x,920+y,"LOS FUNCIONARIOS POLICIALES QUE SUSCRIBEN CERTIFICAN:")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(80+x,900+y,"QUE")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(110+x,900+y,nom+"  " +ape)#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(300+x,900+y,"CLASE:")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(343+x,900+y,clase)#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(80+x,900+y,"D.N.I. N\xc2\xba")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(370+x,885+y,dni+", DE NACIONALIDAD: ")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman",11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(190+x,885+y,pais)#para poner texto valores x,y\n\tdoc.setFont("Times-Roman",11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(190+x,600+y,", DE ESTADO CIVIL:")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(305+x,600+y,e_civil+", ")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(380+x,600+y,"DE PROFESION:")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(80+x,600+y,prof+", ")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(350+x,600+y,"CON DOMICILIO: ")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(80+x,600+y,direc+", ")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(80+x,600+y,"SE ENCUENTRA IDENTIFICADO/A EN ESTA POLICIA, BAJO EL PRONTUARIO: ")#para poner texto valores x,y\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\tdoc.drawString(515+x,600+y,qtipo+" "+npront)#para poner texto valores x,y\n\t\n\n\n\tdoc.setFont("Times-Roman", 11)#fuente de letra y tama\xc3\xb1o\n\t\n\n\n\tdoc.setFont("Times-Roman", 8)#fuente de letra y tama\xc3\xb1o\n\tpie=doc.drawString( 300+x,10+y,"PIE")\n\ttext = doc.beginText(80,800)\n\n\ttext.setFont("Times-Roman", 10)#fuente de letra y tama\xc3\xb1o\n\n\tlista1=[ante]\n\tlista2=[]\n\n\t\n\ta=len(ante)\n\tk=85\n\tcuantas=a/k\n\tcuantas=cuantas+1\n\ttext.textLine(ante[0:k])\n\t\n\ttext.textLine(ante[k:k*2])\n\t\n\n\ttext.textLine(ante[k*2:k*3])\n\ttext.textLine(ante[k*3:k*4])\n\ttext.textLine(ante[k*4:k*5])\n\ttext.textLine(ante[k*5:k*6])\n\ttext.textLine(ante[k*6:k*7])\n\ttext.textLine(ante[k*7:k*8])\n\ttext.textLine(ante[k*8:k*9])\t\t\n\t\t\t\n\n\n\t\n\n\tdoc.drawText(text)\n\t\n\n\n\tdoc.showPage()\n\tdoc.save()\n\tstartfile(pdf)   \n\n\treturn dict()\ndef encabezado():\n\tpdf="con_antecedentes.pdf"#largo,alto#defino como se va a llamar el arhivo pfg\n\toficio=(612,1010) #configuro los tama\xc3\xb1os de la hoja oficio \n\t#A4=612.0, 792.0 \n\tdoc = canvas.Canvas(pdf,pagesize=oficio)\n\tmargen=db(db.margenes).select().first()\n\tx = margen.x\n\tlargo=612.0\t\n\ty =margen.y\n\talto=1010  \n\t\n\treturn dict()\ndef oficio():\n\tfrom reportlab.pdfgen import canvas# clase para crear el documento\n\tfrom reportlab.lib.colors import white,red,green,blue,gray,black#colores\t\n\tfrom os import startfile\n\tfrom reportlab.lib.utils import ImageReader\n\timport StringIO\n\timport PIL.Image\n\tfrom reportlab.lib.styles import getSampleStyleSheet\n\tfrom reportlab.lib.enums import TA_LEFT, TA_RIGHT, TA_CENTER, TA_JUSTIFY\n\tfrom reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Image\n\t\n\treturn dict()\ndef pie():\n\treturn dict()\n\n\ndef dame_un_pdf():\n\n\tfrom reportlab.platypus import *\n\tfrom reportlab.lib.styles import getSampleStyleSheet\n\tfrom reportlab.rl_config import defaultPageSize\n\tfrom reportlab.lib.units import inch, mm\n\tfrom reportlab.lib.enums import TA_LEFT, TA_RIGHT, TA_CENTER, TA_JUSTIFY\n\tfrom reportlab.lib import colors\n\tfrom uuid import uuid4\n\tfrom cgi import escape\n\timport os\n\timport StringIO\n\timport PIL.Image\n\tsetsoli=db(db.solicitud.id==5).select().first()\n\tante=setsoli.antecedentes\n\tlista=[1,2,3,6]\n\tdoc = SimpleDocTemplate("d:/web2py/prueba.pdf")\n\tlogotipo = "d:/web2py/applications/antecedentesplataforma/static/escudo.png"\n\tstory=[]\n\timagen=Image(logotipo, 1 * inch, 1 * inch)\n\tstory.append(imagen)\n\tdoc.build(story)\n\n   \treturn dict()\ndef funcion():\n\ta=1\n\tb=2\n\treturn dict(a=a,b=b)\n\n\t\ndef funcion1(a):\n\tx=a\n\t\n\treturn x\n\n\n\t\n\n\n\n\n\t\n\n\t\n \n \n\n\t\n\n    \n\t\n\n\n\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\n\nresponse._vars=response._caller(dame_un_pdf)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "D:\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "D:\\web2py\\applications\\antecedentesplataforma\\controllers/imprimir.py", line 405, in <module>\n  File "D:\\web2py\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "D:\\web2py\\applications\\antecedentesplataforma\\controllers/imprimir.py", line 354, in dame_un_pdf\n    doc.build(story)\n  File "reportlab\\platypus\\doctemplate.py", line 1292, in build\n    BaseDocTemplate.build(self,flowables, canvasmaker=canvasmaker)\n  File "reportlab\\platypus\\doctemplate.py", line 1057, in build\n    self.handle_flowable(flowables)\n  File "reportlab\\platypus\\doctemplate.py", line 912, in handle_flowable\n    if frame.add(f, canv, trySplit=self.allowSplitting):\n  File "reportlab\\platypus\\frames.py", line 174, in _add\n    w, h = flowable.wrap(aW, h)\n  File "reportlab\\platypus\\flowables.py", line 500, in wrap\n    return self.drawWidth, self.drawHeight\n  File "reportlab\\platypus\\flowables.py", line 494, in __getattr__\n    self._setup_inner()\n  File "reportlab\\platypus\\flowables.py", line 455, in _setup_inner\n    img = self._img\n  File "reportlab\\platypus\\flowables.py", line 488, in __getattr__\n    self._img = ImageReader(self._file)\n  File "reportlab\\lib\\utils.py", line 825, in __init__\n    annotateException(\'\\nfileName=%r identity=%s\'%(fileName,self.identity()))\n  File "reportlab\\lib\\utils.py", line 1406, in annotateException\n    rl_reraise(t,v,b)\n  File "reportlab\\lib\\utils.py", line 789, in __init__\n    self.fp = open_for_read(fileName,\'b\')\n  File "reportlab\\lib\\utils.py", line 672, in open_for_read\n    raise IOError(\'Cannot open resource "%s"\' % name)\nIOError: Cannot open resource "d:/web2py/applications/antecedentesplataforma/static/escudo.png"\nfileName=\'d:/web2py/applications/antecedentesplataforma/static/escudo.png\' identity=[ImageReader@0x39516b0 filename=\'d:/web2py/applications/antecedentesplataforma/static/escudo.png\']\n'
p11
s.